version: '3.8'

services:
  mcp-server:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: lattice-mcp-server
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - MCP_SERVER_PORT=3001
      - MCP_SERVER_HOST=0.0.0.0
      - LATTICE_ENGINE_BASE_URL=http://lattice-engine:8000
      - LATTICE_ENGINE_WS_URL=ws://lattice-engine:8001
      - LOG_LEVEL=info
      - LOG_FILE_PATH=/app/logs/mcp-server.log
      - HEALTH_CHECK_INTERVAL=30000
      - RATE_LIMIT_WINDOW_MS=60000
      - RATE_LIMIT_MAX_REQUESTS=100
      - WS_HEARTBEAT_INTERVAL=30000
      - WS_RECONNECT_DELAY=5000
      - WS_MAX_RECONNECT_ATTEMPTS=10
    ports:
      - "3001:3001"
    volumes:
      - ./logs:/app/logs
      - ./config:/app/config:ro
    networks:
      - lattice-network
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "node", "-e", "console.log('Health check passed')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  redis:
    image: redis:7-alpine
    container_name: lattice-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-lattice123}
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - lattice-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Optional: Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: lattice-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx
    networks:
      - lattice-network
    depends_on:
      - mcp-server
    profiles:
      - proxy

  # Optional: Monitoring with Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: lattice-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    networks:
      - lattice-network
    profiles:
      - monitoring

  # Optional: Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: lattice-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin123}
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    networks:
      - lattice-network
    depends_on:
      - prometheus
    profiles:
      - monitoring

volumes:
  redis-data:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local

networks:
  lattice-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16