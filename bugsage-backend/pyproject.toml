[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "bugsage-backend"
version = "1.0.0"
description = "AI-powered debugging platform backend API"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "BugSage Team", email = "team@bugsage.dev"}
]
maintainers = [
    {name = "BugSage Team", email = "team@bugsage.dev"}
]
keywords = ["debugging", "ai", "fastapi", "error-tracking", "fix-generation"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Framework :: FastAPI",
    "Topic :: Software Development :: Debuggers",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.11"
dependencies = [
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "sqlalchemy[asyncio]>=2.0.0",
    "asyncpg>=0.29.0",
    "alembic>=1.12.0",
    "pydantic>=2.4.0",
    "pydantic-settings>=2.0.0",
    "pydanticai>=0.0.4",
    "python-multipart>=0.0.6",
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "openai>=1.3.0",
    "anthropic>=0.7.0",
    "tiktoken>=0.5.0",
    "redis>=5.0.0",
    "celery>=5.3.0",
    "prometheus-fastapi-instrumentator>=6.1.0",
    "structlog>=23.1.0",
    "python-dotenv>=1.0.0",
    "httpx>=0.25.0",
    "aiofiles>=23.2.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "mypy>=1.5.0",
    "flake8>=6.0.0",
    "pre-commit>=3.3.0",
    "isort>=5.12.0",
    "bandit>=1.7.0",
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.1.0",
    "mkdocstrings>=0.22.0",
    "mkdocs-mermaid2-plugin>=1.0.0",
]

[project.urls]
Homepage = "https://github.com/bugsage/bugsage-backend"
Documentation = "https://bugsage-backend.readthedocs.io/"
Repository = "https://github.com/bugsage/bugsage-backend.git"
"Bug Tracker" = "https://github.com/bugsage/bugsage-backend/issues"

[project.scripts]
bugsage-api = "app.main:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["app*"]
exclude = ["tests*"]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["app"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = [
    "uvicorn.*",
    "sqlalchemy.*",
    "alembic.*",
    "celery.*",
    "redis.*",
    "prometheus_fastapi_instrumentator.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
asyncio_mode = "auto"
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]

[tool.coverage.run]
source = ["app"]
omit = [
    "*/tests/*",
    "*/venv/*",
    "*/__pycache__/*",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

[tool.bandit]
exclude_dirs = ["tests", "migrations"]
skips = ["B101", "B601"]